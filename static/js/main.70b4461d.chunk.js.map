{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expense/ExpensesFilter.js","components/Expense/ExpenseDate.js","components/Expense/ExpenseItem.js","components/Expense/ExpensesList.js","components/Expense/Expense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","console","log","className","type","onChange","target","value","min","step","max","onClick","onStopEdit","NewExpense","addExpense","setAddExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseData","month","toLocaleString","day","year","getFullYear","ExpenseItem","setTitle","ExpensesList","items","length","map","expense","Expense","filteredYear","setFilteredYear","filteredExpenses","expenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70b4461d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    console.log(\"HELLO\");\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onStopEdit}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [addExpense, setAddExpense] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setAddExpense(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setAddExpense(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setAddExpense(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!addExpense && (\r\n        <button onClick={startEditingHandler}> Add New Expenses</button>\r\n      )}\r\n      {addExpense && (\r\n        <ExpenseForm\r\n          onStopEdit={stopEditingHandler}\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props){\r\n    const classes = 'card ' + props.className;\r\n    return(\r\n        <div className={classes}>\r\n{props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseData(props){\r\n    const month = props.date.toLocaleString('en-US', {month:'long'});\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year= props.date.getFullYear();\r\n\r\n\r\n    return(\r\n    <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseData;","import React, { useState } from \"react\";\r\nimport \"./ExpenseDate.css\";\r\nimport ExpenseData from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction ExpenseItem(props) {\r\n  const [title, setTitle] = useState(props.title);\r\n  console.log(\"evaluted by react\");\r\n\r\n  const clickHandler = () => {\r\n    setTitle(\"updated\");\r\n    console.log(title);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseData date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">$ {props.amount}</div>\r\n        </div>\r\n        <button onClick={clickHandler}>change Name</button>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\"> found no expenses</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expense-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import { getAllByAltText } from \"@testing-library/react\";\r\nimport React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expense.css\";\r\n\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nfunction Expense(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expense;\r\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expense from \"./components/Expense/Expense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  console.log(expenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n    console.log(expense);\n    console.log(expenses);\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expense expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}